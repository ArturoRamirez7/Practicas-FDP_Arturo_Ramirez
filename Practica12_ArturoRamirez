/*

Práctica 12                                                                               Ramírez Mondragón Arturo Gabriel
16 de enero del 2021

*/

//Código fuente para algunos algoritmos vistos en la tarea 11 de Fundamentos de Programación (FI-UNAM)--------------------
//Todas las variables de los programas se leen desde la entrada estándar (teclado)----------------------------------------

//Única librería utilizada------------------------------------------------------------------------------------------------
#include <stdio.h>

//Funciones llamadas durante la funcion principal para cada problema:-----------------------------------------------------
	//Subfunciones llamadas durante las funciones secundarias:------------------------------------------------------------
void ahorros_Anuales();
	void ahorrosMensuales(int meses);
void clasificacion_numeros();
	void clasificaciones();
void numeros_pares_cien();

//Declaración de variables globales:--------------------------------------------------------------------------------------



//Función principal:------------------------------------------------------------------------------------------------------
int main(){
	
//Variable para la estructura switch y escoger un problema----------------------------------------------------------------
	unsigned int sel=0;
	
//Estructura de iteración 'do-while' para iterar todo el código-----------------------------------------------------------
	do{
	
//Menú para escoger el problema:------------------------------------------------------------------------------------------
		printf("\n Practica12\t\t\t\t\t\t\t\tRamirez Mondragon Arturo Gabriel\n 16 de enero del 2021.\n\n\n");
	
		printf("\t\t\t\t--------------Menu---------------\n\n\n\n");
	
		printf("\tPor favor seleccione el problema que guste resolver:\n\n\n");
	
		printf(" 1) Ahorros anuales con depositos variables mensuales.\n\n");
		printf(" 2) Conteo de numeros determinados mayores a cero y menores a cero.\n\n");
		printf(" 3) Numeros pares entre 0 y 100.\n\n");
		printf(" 4) Salir.\n\n");
	
	
		printf("\n\n\tSeleccion: ");
		scanf("%u", &sel);
	
//Selección de instrucciones para cada problema:--------------------------------------------------------------------------
		switch (sel) {
		
		
			default:
				printf("\n\n\t\tNo tengo tantos problemas resueltos. Lo siento :(\n");
				printf("\n\n\nEso es todo. Muchas gracias por su tiempo. Vuelva pronto.");
				printf("\n\n");
			break;
		
		
			case 1:
				printf("\n\n\n\n\t\t\tPrograma para calcular los ahorros anuales con depositos variables (dolar).\n\n");
				ahorros_Anuales();
				printf("\n\n\nEso es todo. Muchas gracias por su tiempo. Vuelva pronto.");
				printf("\n\n");
			break;
		
		
			case 2:
				printf("\n\n\n\n\t\t\tPrograma para contabilizar N numeros mayores, menores e iguales a cero.\n\n");
				clasificacion_numeros();
				printf("\n\n\nEso es todo. Muchas gracias por su tiempo. Vuelva pronto.");
				printf("\n\n");
			break;
		
		
			case 3:
				printf("\n\n\n\n\t\t\tPrograma para generar e imprimir los numeros pares de 0 a 100\n\n");
				numeros_pares_cien();
				printf("\n\n\nEso es todo. Muchas gracias por su tiempo. Vuelva pronto.");
				printf("\n\n");
			break;
		
		setbuf(stdin, NULL); // limpia el buffer del teclado--------------------------------------------------------------
		
		}
	
	//Final de la estructura de iteración 'do-while' para repetir el código las veces que se desee------------------------
	} while (sel != 4);
	
	return 0;
}

//Funciones secundarias en orden y su propia declaración de variables (locales):------------------------------------------
void ahorros_Anuales(){
	
	//Declaración de variables locales para el límite de iteraciones, contador, los depósitos y la moneda respectivamente-
	#define LIMITE 12
	char op='n';
	int meses=1;
	
	//ciclo por si se gusta realizar más de una vez-----------------------------------------------------------------------
	do {
		
		//Ciclo para almacenar los depósitos de cada mes------------------------------------------------------------------
		ahorrosMensuales(meses);
		
		//El programa termina y le pregunta al usuario si desea repetirlo-------------------------------------------------
		printf("\n\n\nDesea reiniciar el programa? S/N\n");
		//scanf("%c", &op); printf("%c", op); ... Alternativa de getchar para leer la varieble 'op' ----------------------
		setbuf(stdin, NULL);
		op=getchar();
		
	} while (op == 'S' || op == 's'); //Indistinto si es mayúscula o minúscula--------------------------------------------

	return;
}

	void ahorrosMensuales(int meses){
		
	//Declaración de variables
		float ahorros=0, depositos=0;

		//Usé 'for' debido a que se debe realizar al menos una vez y se aprovechan sus tres acciones----------------------
		for (meses; meses<=LIMITE; meses++) {
		
			printf("\n\n\nPara el mes numero %d", meses);
			printf(". Cuanto dinero deposito al final del mes? "); scanf("%f", &depositos);
			ahorros+=depositos;
			printf("\nLos ahorros de este mes son %f dolares", ahorros);
				
			}
	
		printf("\n\n\nSus ahorros de estos doce meses son: %f dolares", ahorros);
	
}



void clasificacion_numeros(){
	
	//Declaración de variables para el ciclo, los contadores de clasificación y el número a clasificar--------------------
	char re='n';
	unsigned int Mn=0, My=0;
	float pp=0;

	//Se usa la estructura 'do-while' para añadir los N números que desee el usuario sin conocerlos-----------------------
	//Así solo se usa solo una variable en lugar de dos para la iteración-------------------------------------------------
	do {
			
		printf("\nPor favor, escribe el numero que desees clasificar: "); scanf("%f", &pp);
		pp<=0 ? Mn++ : My++;
		
		//Ciclo para clasificar la cantidad N de números hasta que el usuario defina dicha cantidad-----------------------
		if (pp<=0) {
			printf("\nEl numero es menor o igual a cero");
			//Mn++;
			printf("\n\nHasta ahora las cantidades iguales o menores a cero son: %o", Mn);
			printf("\nHasta ahora las cantidades mayores a cero son: %o", My);
		}
		else {
			printf("\nEl numero es mayor a cero"); 
			//My++;
			printf("\n\nHasta ahora las cantidades mayores a cero son: %o", My);
			printf("\nHasta ahora las cantidades iguales o menores a cero son: %o", Mn);
		}
		
		printf("\n\n\nDesea agregar y clasificar otro numero? Y/N\n");
		setbuf(stdin, NULL);//Evitamos errores al borrar la memoria-------------------------------------------------------
		//scanf("%c", &re); printf("%c", re); ... Alternativa al getchar para el caracter---------------------------------
		re=getchar();
		
	} while (re == 'Y' || re == 'y'); //Indistinto si es mayúscula o minúscula--------------------------------------------
	
	//Interfaz cuando se termine de iterar--------------------------------------------------------------------------------
	printf("\n\n\nLas cantidades menores o iguales a cero totales son: %o", Mn);
	printf("\n\nLas cantidades mayores a cero totales son: %o", My);
	
	return;
}


void numeros_pares_cien(){

	//Declaración de variable local para el ciclo e impresión de los numeros pares----------------------------------------
	unsigned int cont;
	
	//Arreglo de los números pares
	printf("\nSe generaran e imprimiran los numeros pares que se encuentran entre cero y cien:\n");
	printf("\n\n[ ");

	//Usa la estructura de repetición 'for' para repetirlo hasta cien-----------------------------------------------------
	for (cont=0; cont<100; cont++){
		
	//Ciclo para separar e imprimir los numeros pares hasta cien----------------------------------------------------------	
		if (cont%2 == 0){
			printf("%d, ", cont);
			continue;
		}
	
	}
	if (cont==100)
		printf("%d ", cont);
		
	//Final del arreglo---------------------------------------------------------------------------------------------------
	printf(" ]\n\n");
	
	return;
	
}
